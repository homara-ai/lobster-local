# Lobster AI - Production API Dockerfile
# Multi-stage build for optimized production deployment

# Build stage
FROM python:3.11-slim as builder

WORKDIR /build

# Install build dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    gcc \
    g++ \
    && rm -rf /var/lib/apt/lists/*

# Copy requirements and install Python dependencies
COPY requirements.txt pyproject.toml ./
RUN pip install --no-cache-dir --user -r requirements.txt

# Copy source code
COPY lobster/ ./lobster/
COPY main.py setup.py ./

# Production stage
FROM python:3.11-slim

WORKDIR /app

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    curl \
    && rm -rf /var/lib/apt/lists/* \
    && groupadd -r lobster \
    && useradd -r -g lobster lobster

# Copy installed packages from builder stage
COPY --from=builder /root/.local /home/lobster/.local

# Copy application code
COPY --from=builder /build/lobster ./lobster
COPY --from=builder /build/main.py ./

# Create necessary directories
RUN mkdir -p /app/workspaces /app/exports /app/logs \
    && chown -R lobster:lobster /app

# Switch to non-root user
USER lobster

# Set Python path
ENV PATH=/home/lobster/.local/bin:$PATH
ENV PYTHONPATH=/app

# Environment variables
ENV ENVIRONMENT=production
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:8000/api/v1/health/simple || exit 1

# Expose port
EXPOSE 8000

# Start the application
CMD ["python", "-m", "uvicorn", "lobster.api.main:app", \
     "--host", "0.0.0.0", \
     "--port", "8000", \
     "--workers", "1", \
     "--access-log"]
