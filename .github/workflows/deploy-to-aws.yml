name: Deploy to AWS App Runner

on:
  push:
    branches:
      - main

env:
  # ðŸ”§ Configuration (edit these)
  AWS_REGION: us-east-1
  ECR_REPOSITORY: homara
  APP_PORT: 8501

  # These two come from your AWS setup (copy from console or IAM)
  SERVICE_ARN: arn:aws:apprunner:us-east-1:649207544517:service/lobster/76fff8fb36564c2990c7c11d9c243edb
  ACCESS_ROLE_ARN: arn:aws:iam::649207544517:role/service-role/AppRunnerECRAccessRole_v2

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push Docker image
        run: |
          IMAGE_TAG=${{ github.sha }}
          ECR_REGISTRY=${{ steps.login-ecr.outputs.registry }}
          IMAGE_URI=$ECR_REGISTRY/${{ env.ECR_REPOSITORY }}:$IMAGE_TAG
          
          echo "ðŸ”¨ Building Docker image..."
          docker build -t $IMAGE_URI .
          echo "ðŸ“¤ Pushing Docker image..."
          docker push $IMAGE_URI
          
          echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV

      - name: Deploy to App Runner
        run: |
          echo "ðŸš€ Deploying to App Runner service: ${{ env.SERVICE_ARN }}"
          aws apprunner update-service \
            --service-arn ${{ env.SERVICE_ARN }} \
            --source-configuration "ImageRepository={ImageIdentifier=${{ env.IMAGE_URI }},ImageRepositoryType=ECR,ImageConfiguration={Port=${{ env.APP_PORT }}}},AuthenticationConfiguration={AccessRoleArn=${{ env.ACCESS_ROLE_ARN }}}"