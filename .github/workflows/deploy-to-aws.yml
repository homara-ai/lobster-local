name: Deploy to App Runner - Image based

on:
  push:
    branches: [ main ] # Trigger workflow on git push to main branch
  workflow_dispatch: # Allow manual invocation of the workflow

jobs:  
  deploy:
    runs-on: ubuntu-latest
    
    steps:      
      - name: Checkout
        uses: actions/checkout@v2
        with:
          persist-credentials: false
          
      - name: Configure AWS credentials
        id: aws-credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}     

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1        

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: homara
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f Dockerfile.streamlit .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"  
          
      - name: Deploy to App Runner
        id: deploy-apprunner
        uses: awslabs/amazon-app-runner-deploy@main        
        with:
          service: lobster-streamlit
          image: ${{ steps.build-image.outputs.image }}          
          access-role-arn: ${{ secrets.ROLE_ARN }}
          runtime: PYTHON_3          
          region: ${{ secrets.AWS_REGION }}
          cpu : 1
          memory : 2
          port: 8501
          wait-for-service-stability: true
          environment-variables: |
            OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
            AWS_BEDROCK_ACCESS_KEY=${{ secrets.AWS_BEDROCK_ACCESS_KEY }}
            AWS_BEDROCK_SECRET_ACCESS_KEY=${{ secrets.AWS_BEDROCK_SECRET_ACCESS_KEY }}
            NCBI_API_KEY=${{ secrets.NCBI_API_KEY }}
            GENIE_PROFILE=${{ secrets.GENIE_PROFILE }}
            LANGFUSE_PUBLIC_KEY=${{ secrets.LANGFUSE_PUBLIC_KEY }}
            LANGFUSE_SECRET_KEY=${{ secrets.LANGFUSE_SECRET_KEY }}
            LANGFUSE_HOST=${{ secrets.LANGFUSE_HOST }}
            STRIPE_PUBLISHABLE_KEY=${{ secrets.STRIPE_PUBLISHABLE_KEY }}
            STRIPE_SECRET_KEY=${{ secrets.STRIPE_SECRET_KEY }}
            STRIPE_WEBHOOK_SECRET=${{ secrets.STRIPE_WEBHOOK_SECRET }}
            PORT=8501
            PYTHONUNBUFFERED=1
            STREAMLIT_SERVER_HEADLESS=true
      
      - name: App Runner output
        run: echo "App runner output ${{ steps.deploy-apprunner.outputs.service-id }}"
